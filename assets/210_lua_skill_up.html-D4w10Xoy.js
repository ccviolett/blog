import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c as i,a as n,b as a,d as e,f as c}from"./app-CahC9Ikc.js";const r={},p=c(`<h1 id="lua-技巧提升" tabindex="-1"><a class="header-anchor" href="#lua-技巧提升" aria-hidden="true">#</a> Lua 技巧提升</h1><h2 id="功能实现" tabindex="-1"><a class="header-anchor" href="#功能实现" aria-hidden="true">#</a> 功能实现</h2><h3 id="域名提取" tabindex="-1"><a class="header-anchor" href="#域名提取" aria-hidden="true">#</a> 域名提取</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">function</span> <span class="token function">extractURL</span><span class="token punctuation">(</span>inputString<span class="token punctuation">)</span>
    <span class="token comment">-- URL的模式匹配，确保协议和域名都存在</span>
    <span class="token keyword">local</span> urlPattern <span class="token operator">=</span> <span class="token string">&#39;https?://[%w.-]+/%S*&#39;</span>
    <span class="token keyword">local</span> url <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>inputString<span class="token punctuation">,</span> urlPattern<span class="token punctuation">)</span>
    <span class="token keyword">return</span> url
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理" aria-hidden="true">#</a> 异常处理</h3><p>异常处理是程序中至关重要的一环，不仅仅保证了程序不会意外中断、丢失数据、造成更大的影响，也能够为运营提供足够的数据来判断问题的出处。</p><p>在 Lua 中没有类似 <code>try-catch</code> 或 <code>try-except</code> 之类的语法糖，只给我们提供了 <code>pcall</code> 和 <code>xpcall</code> 两个函数来进行异常处理。</p><p>我们可以按照下面的模板来写 Lua 当中的异常处理：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">if</span> <span class="token function">xpcall</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">CallTheFunction</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">HandleError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
	<span class="token comment">-- do something when everything good</span>
<span class="token keyword">else</span>
	<span class="token comment">-- do something when something go wrong</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">-- a</span>

<span class="token comment">--[[
a
b
c
d
]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="遍历数组" tabindex="-1"><a class="header-anchor" href="#遍历数组" aria-hidden="true">#</a> 遍历数组</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">#</span>list <span class="token keyword">do</span>
	<span class="token function">print</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token function">ipairs</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token keyword">do</span>
	<span class="token function">print</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断非空" tabindex="-1"><a class="header-anchor" href="#判断非空" aria-hidden="true">#</a> 判断非空</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">if</span> a <span class="token operator">~=</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>
	<span class="token comment">-- do something</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断非空表" tabindex="-1"><a class="header-anchor" href="#判断非空表" aria-hidden="true">#</a> 判断非空表</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token function">next</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token keyword">nil</span>
	<span class="token comment">--不是空表</span>
<span class="token keyword">else</span>
	<span class="token comment">--空表</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串替换" tabindex="-1"><a class="header-anchor" href="#字符串替换" aria-hidden="true">#</a> 字符串替换</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>res <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">gsub</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;BEFORE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AFTER&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="混合编程" tabindex="-1"><a class="header-anchor" href="#混合编程" aria-hidden="true">#</a> 混合编程</h2><h4 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h4>`,21),d={href:"https://github.com/scoder/lupa",target:"_blank",rel:"noopener noreferrer"},u={href:"https://cloud.tencent.com/developer/article/2403409",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/gitblog_00083/article/details/137367920",target:"_blank",rel:"noopener noreferrer"},h={href:"https://blog.csdn.net/xuehu96/article/details/126613678",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"参考资料-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料-1","aria-hidden":"true"},"#"),a(" 参考资料")],-1),m={href:"https://blog.csdn.net/qq_36383623/article/details/103955190",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.cnblogs.com/Braveliu/p/10750574.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/hp_cpp/article/details/108244517",target:"_blank",rel:"noopener noreferrer"},f={href:"https://cloud.tencent.com/developer/article/1908398",target:"_blank",rel:"noopener noreferrer"};function _(w,y){const s=l("ExternalLinkIcon");return o(),i("div",null,[p,n("ul",null,[n("li",null,[n("a",d,[a("https://github.com/scoder/lupa"),e(s)])]),n("li",null,[n("a",u,[a("混合编程：在Go中与Python共舞-腾讯云开发者社区-腾讯云 (tencent.com)"),e(s)])]),n("li",null,[n("a",k,[a("探秘pLua：轻量级的Python与Lua交互库-CSDN博客"),e(s)])]),n("li",null,[n("a",h,[a("【Go-Lua】Golang嵌入Lua代码——gopher-lua_golang lua-CSDN博客"),e(s)])])]),v,n("ul",null,[n("li",null,[n("a",m,[a("Lua中的非空判断_lua nil-CSDN博客"),e(s)])]),n("li",null,[n("a",b,[a("Lua table遍历 - kaizenly - 博客园 (cnblogs.com)"),e(s)])]),n("li",null,[n("a",g,[a("lua 判断table是否为空的正确做法_lua判断数组是否为空-CSDN博客"),e(s)])]),n("li",null,[n("a",f,[a("挑战一晚上从零入门lua语言，直接对标Python快速上手-腾讯云开发者社区-腾讯云 (tencent.com)"),e(s)])])])])}const q=t(r,[["render",_],["__file","210_lua_skill_up.html.vue"]]);export{q as default};
