const n=JSON.parse(`{"key":"v-7defc484","path":"/wiki/300_django_skill_up.html","title":"Django 技能精进","lang":"zh-CN","frontmatter":{"description":"Django 技能精进 Django RESTful Framework 功能实现 二级路由分页 在 DRF 中，我们可以很方便地通过 ViewSet 生成包含基础 CRUD 的 endpoint，并且能够通过 @action 装饰器在当前 endpoint 下快速注册子路由。 @action(detail=False, methods=['get'], url_path='status/(?P&lt;status_code&gt;\\\\d+)') def get_status_vulinfos(self, request, status_code): \\tvulinfos = VulInfo.objects.filter(status=status_code) \\tpage = self.paginate_queryset(vulinfos) \\tif page is not None: \\t\\tserializer = VulInfoSerializer(page, many=True) \\t\\treturn self.get_paginated_response(serializer.data) \\tserializer = VulInfoSerializer(vulinfos, many=True) \\treturn Response(serializer.data, status=200","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/wiki/300_django_skill_up.html"}],["meta",{"property":"og:site_name","content":"罗潇阳的博客"}],["meta",{"property":"og:title","content":"Django 技能精进"}],["meta",{"property":"og:description","content":"Django 技能精进 Django RESTful Framework 功能实现 二级路由分页 在 DRF 中，我们可以很方便地通过 ViewSet 生成包含基础 CRUD 的 endpoint，并且能够通过 @action 装饰器在当前 endpoint 下快速注册子路由。 @action(detail=False, methods=['get'], url_path='status/(?P&lt;status_code&gt;\\\\d+)') def get_status_vulinfos(self, request, status_code): \\tvulinfos = VulInfo.objects.filter(status=status_code) \\tpage = self.paginate_queryset(vulinfos) \\tif page is not None: \\t\\tserializer = VulInfoSerializer(page, many=True) \\t\\treturn self.get_paginated_response(serializer.data) \\tserializer = VulInfoSerializer(vulinfos, many=True) \\treturn Response(serializer.data, status=200"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-23T09:32:11.000Z"}],["meta",{"property":"article:author","content":"CCViolett"}],["meta",{"property":"article:modified_time","content":"2024-07-23T09:32:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django 技能精进\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-23T09:32:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CCViolett\\",\\"url\\":\\"https://ccviolett.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Django RESTful Framework","slug":"django-restful-framework","link":"#django-restful-framework","children":[{"level":3,"title":"功能实现","slug":"功能实现","link":"#功能实现","children":[]}]}],"git":{"createdTime":1721727131000,"updatedTime":1721727131000,"contributors":[{"name":"copoluo","email":"copoluo@tencent.com","commits":1}]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"wiki/300_django_skill_up.md","localizedDate":"2024年7月23日","excerpt":"<h1> Django 技能精进</h1>\\n<h2> Django RESTful Framework</h2>\\n<h3> 功能实现</h3>\\n<h4> 二级路由分页</h4>\\n<p>在 DRF 中，我们可以很方便地通过 ViewSet 生成包含基础 CRUD 的 endpoint，并且能够通过 <code>@action</code> 装饰器在当前 endpoint 下快速注册子路由。</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token decorator annotation punctuation\\">@action</span><span class=\\"token punctuation\\">(</span>detail<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">False</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'get'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> url_path<span class=\\"token operator\\">=</span><span class=\\"token string\\">'status/(?P&lt;status_code&gt;\\\\d+)'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_status_vulinfos</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> request<span class=\\"token punctuation\\">,</span> status_code<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n\\tvulinfos <span class=\\"token operator\\">=</span> VulInfo<span class=\\"token punctuation\\">.</span>objects<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">filter</span><span class=\\"token punctuation\\">(</span>status<span class=\\"token operator\\">=</span>status_code<span class=\\"token punctuation\\">)</span>\\n\\n\\tpage <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>paginate_queryset<span class=\\"token punctuation\\">(</span>vulinfos<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> page <span class=\\"token keyword\\">is</span> <span class=\\"token keyword\\">not</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n\\t\\tserializer <span class=\\"token operator\\">=</span> VulInfoSerializer<span class=\\"token punctuation\\">(</span>page<span class=\\"token punctuation\\">,</span> many<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>get_paginated_response<span class=\\"token punctuation\\">(</span>serializer<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">)</span>\\n\\n\\tserializer <span class=\\"token operator\\">=</span> VulInfoSerializer<span class=\\"token punctuation\\">(</span>vulinfos<span class=\\"token punctuation\\">,</span> many<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">return</span> Response<span class=\\"token punctuation\\">(</span>serializer<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">,</span> status<span class=\\"token operator\\">=</span><span class=\\"token number\\">200</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
