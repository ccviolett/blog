import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as l,a as n,b as e,d as t,f as a}from"./app-CahC9Ikc.js";const c={},r=a(`<h1 id="python-技能精进" tabindex="-1"><a class="header-anchor" href="#python-技能精进" aria-hidden="true">#</a> Python 技能精进</h1><h2 id="常见功能" tabindex="-1"><a class="header-anchor" href="#常见功能" aria-hidden="true">#</a> 常见功能</h2><h3 id="网络请求" tabindex="-1"><a class="header-anchor" href="#网络请求" aria-hidden="true">#</a> 网络请求</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> json<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h3><p>在 Python3 中，<code>list</code> 去除了 <code>sort</code> 的 <code>cmp</code> 字段，使得我们没办法直接写自定义比较函数。</p><p>不过我们可以用 <code>functools</code> 中的 <code>cmp_to_key</code> 将比较函数转换为比较的 Key</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> functools

<span class="token keyword">def</span> <span class="token function">myCmp</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> x <span class="token operator">&gt;</span> y<span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token number">1</span>
	<span class="token keyword">if</span> x <span class="token operator">&lt;</span> y<span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
	<span class="token keyword">return</span> <span class="token number">0</span>

myList<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span>functools<span class="token punctuation">.</span>cmp_to_key<span class="token punctuation">(</span>myCmp<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h4>`,9),u={href:"https://blog.csdn.net/gongjianbo1992/article/details/107324871",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="字符串处理" tabindex="-1"><a class="header-anchor" href="#字符串处理" aria-hidden="true">#</a> 字符串处理</h3><p>插入</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&#39;Bob&#39;</span>
<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;Hello, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>切割</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>去除前后特定字符</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>正则匹配</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>url_pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&#39;https?://(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+&#39;</span><span class="token punctuation">)</span>
url_res <span class="token operator">=</span> url_pattern<span class="token punctuation">.</span>search<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
url <span class="token operator">=</span> url_res<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-处理" tabindex="-1"><a class="header-anchor" href="#list-处理" aria-hidden="true">#</a> list 处理</h3><h4 id="末尾" tabindex="-1"><a class="header-anchor" href="#末尾" aria-hidden="true">#</a> 末尾</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lastItem <span class="token operator">=</span> myList<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意 <code>list</code> 不能为空，否则会越界</p><h4 id="长度" tabindex="-1"><a class="header-anchor" href="#长度" aria-hidden="true">#</a> 长度</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>listLen <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>myList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="铺平" tabindex="-1"><a class="header-anchor" href="#铺平" aria-hidden="true">#</a> 铺平</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>newlist <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>messList<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>newlist <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
	<span class="token builtin">list</span><span class="token punctuation">(</span>listA<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token builtin">list</span><span class="token punctuation">(</span>listB<span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),k={href:"https://blog.csdn.net/weixin_34327800/article/details/113960880",target:"_blank",rel:"noopener noreferrer"},h=a(`<h3 id="lambda" tabindex="-1"><a class="header-anchor" href="#lambda" aria-hidden="true">#</a> Lambda</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">+</span> b
res <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参考资料-1" tabindex="-1"><a class="header-anchor" href="#参考资料-1" aria-hidden="true">#</a> 参考资料</h4>`,3),v={href:"https://zhuanlan.zhihu.com/p/80960485",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="常见错误" tabindex="-1"><a class="header-anchor" href="#常见错误" aria-hidden="true">#</a> 常见错误</h2><h3 id="tuple-错误" tabindex="-1"><a class="header-anchor" href="#tuple-错误" aria-hidden="true">#</a> tuple 错误</h3><p>多加 <code>,</code> 导致 <code>tuple</code> 报错</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会得到 <code>&lt;class &#39;tuple&#39;&gt;</code></p>`,5);function b(y,g){const s=o("ExternalLinkIcon");return i(),l("div",null,[r,n("ul",null,[n("li",null,[n("a",u,[e("Python3 自定义 sort() 的排序规则_python3 sort-CSDN博客"),t(s)])])]),d,n("p",null,[n("a",k,[e("python can only concatenate_Python错误集锦：TypeError: can only concatenate list (not “tuple”) to list...-CSDN博客"),t(s)])]),h,n("ul",null,[n("li",null,[n("a",v,[e("细说Python的lambda函数用法，建议收藏 - 知乎 (zhihu.com)"),t(s)])])]),m])}const x=p(c,[["render",b],["__file","220_python_skill_up.html.vue"]]);export{x as default};
