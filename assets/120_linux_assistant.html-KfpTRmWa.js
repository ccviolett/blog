import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as i,c as l,a,b as e,d as n,f as t}from"./app-CahC9Ikc.js";const c={},h=t(`<h1 id="通用-linux-协助宝典" tabindex="-1"><a class="header-anchor" href="#通用-linux-协助宝典" aria-hidden="true">#</a> 通用 Linux 协助宝典</h1><h2 id="终端配置" tabindex="-1"><a class="header-anchor" href="#终端配置" aria-hidden="true">#</a> 终端配置</h2><h3 id="zsh" tabindex="-1"><a class="header-anchor" href="#zsh" aria-hidden="true">#</a> Zsh</h3><p>首先我们通过 Linux 的包管理命令安装 zsh，随后配置 <code>Oh My Zsh</code>，通过以下的脚本一键安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是因为众所周知的原因，这个命令经常会出现无法运行的情况，我们可以使用国内的镜像源。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后我们安装一些常用的插件，如 zsh-autosuggestions，通过以下的脚本一键安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">\${ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom}</span>/plugins/zsh-autosuggestions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后将 <code>zsh-autosuggestions</code> 添加到 <code>~/.zshrc</code> 文件的 <code>plugins</code> 中去，修改完后配置文件如下。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>plugins=(git zsh-autosuggestions)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="相关资料" tabindex="-1"><a class="header-anchor" href="#相关资料" aria-hidden="true">#</a> 相关资料</h4>`,12),d={href:"https://ohmyz.sh",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/ohmyzsh/ohmyzsh",target:"_blank",rel:"noopener noreferrer"},u={href:"https://juejin.cn/post/7023578642156355592",target:"_blank",rel:"noopener noreferrer"},m={href:"https://zhuanlan.zhihu.com/p/58073103",target:"_blank",rel:"noopener noreferrer"},g=t(`<h2 id="常见操作" tabindex="-1"><a class="header-anchor" href="#常见操作" aria-hidden="true">#</a> 常见操作</h2><h3 id="输出重定向" tabindex="-1"><a class="header-anchor" href="#输出重定向" aria-hidden="true">#</a> 输出重定向</h3><p>如果我们希望把一个命令在屏幕上输出的所有东西都记录到一个文件中去，我们可以使用输出重定向。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python main.py <span class="token operator">&gt;</span> run.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中：</p><ul><li><code>&gt;</code>：这个符号表示将命令的标准输出（stdout）重定向到一个文件。在这种情况下，将把脚本的输出重定向到名为 run.log 的文件。如果 run.log 文件不存在，它将被创建；如果已存在，它的内容将被覆盖。</li><li><code>2&gt;&amp;1</code> 的意思是，将标准错误输出（stderr）重定向到与标准输出（stdout）相同的目标，也就是 run.log 文件。这样，无论是脚本的正常输出还是错误信息，都将被写入同一个文件 run.log</li></ul>`,6);function b(v,f){const s=r("ExternalLinkIcon");return i(),l("div",null,[h,a("ul",null,[a("li",null,[e("官方网站："),a("a",d,[e("Oh My Zsh - a delightful & open source framework for Zsh"),n(s)])]),a("li",null,[e("Github 项目："),a("a",p,[e("GitHub - ohmyzsh/ohmyzsh: 🙃 A delightful community-driven (with 2,100+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community."),n(s)])]),a("li",null,[e("国内配置："),a("a",u,[e("oh-my-zsh 国内安装及配置 - 掘金"),n(s)])]),a("li",null,[a("a",m,[e("zsh & oh-my-zsh 的配置与使用 - 知乎"),n(s)])])]),g])}const x=o(c,[["render",b],["__file","120_linux_assistant.html.vue"]]);export{x as default};
