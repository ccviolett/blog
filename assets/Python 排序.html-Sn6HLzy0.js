const t=JSON.parse('{"key":"v-591e0744","path":"/wiki/notes/Python%20%E6%8E%92%E5%BA%8F.html","title":"","lang":"zh-CN","frontmatter":{"description":"在 Python3 中，list 去除了 sort 的 cmp 字段，使得我们没办法直接写自定义比较函数。 不过我们可以用 functools 中的 cmp_to_key 将比较函数转换为比较的 Key import functools def myCmp(x, y): \\tif x &gt; y: \\t\\treturn 1 \\tif x &lt; y: \\t\\treturn -1 \\treturn 0 myList.sort(key=functools.cmp_to_key(myCmp))","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/wiki/notes/Python%20%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"罗潇阳的博客"}],["meta",{"property":"og:description","content":"在 Python3 中，list 去除了 sort 的 cmp 字段，使得我们没办法直接写自定义比较函数。 不过我们可以用 functools 中的 cmp_to_key 将比较函数转换为比较的 Key import functools def myCmp(x, y): \\tif x &gt; y: \\t\\treturn 1 \\tif x &lt; y: \\t\\treturn -1 \\treturn 0 myList.sort(key=functools.cmp_to_key(myCmp))"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-23T11:19:44.000Z"}],["meta",{"property":"article:author","content":"CCViolett"}],["meta",{"property":"article:modified_time","content":"2024-07-23T11:19:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-23T11:19:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CCViolett\\",\\"url\\":\\"https://ccviolett.github.io\\"}]}"]]},"headers":[{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1721733584000,"updatedTime":1721733584000,"contributors":[{"name":"copoluo","email":"copoluo@tencent.com","commits":1}]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"wiki/notes/Python 排序.md","localizedDate":"2024年7月23日","excerpt":"<p>在 Python3 中，<code>list</code> 去除了 <code>sort</code> 的 <code>cmp</code> 字段，使得我们没办法直接写自定义比较函数。</p>\\n<p>不过我们可以用 <code>functools</code> 中的 <code>cmp_to_key</code> 将比较函数转换为比较的 Key</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> functools\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">myCmp</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n\\t<span class=\\"token keyword\\">if</span> x <span class=\\"token operator\\">&gt;</span> y<span class=\\"token punctuation\\">:</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">1</span>\\n\\t<span class=\\"token keyword\\">if</span> x <span class=\\"token operator\\">&lt;</span> y<span class=\\"token punctuation\\">:</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span>\\n\\nmyList<span class=\\"token punctuation\\">.</span>sort<span class=\\"token punctuation\\">(</span>key<span class=\\"token operator\\">=</span>functools<span class=\\"token punctuation\\">.</span>cmp_to_key<span class=\\"token punctuation\\">(</span>myCmp<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
