const n=JSON.parse('{"key":"v-7d69a3ac","path":"/wiki/notes/LangChain%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%20JSON%20%E6%95%B0%E6%8D%AE.html","title":"","lang":"zh-CN","frontmatter":{"description":"from langchain_openai import ChatOpenAI from langchain.prompts import PromptTemplate from langchain_core.prompts import ChatPromptTemplate from langchain_core.output_parsers import StrOutputParser from langchain.output_parsers import PydanticOutputParser from langchain_core.pydantic_v1 import BaseModel, Field import json llm = ChatOpenAI( base_url=\\"http://hunyuanapi.woa.com/openapi/v1\\", api_key=\\"HWiNj7muC8RNMu3xR0050RoE31uu2vkI\\", model=\\"hunyuan\\") class ResultItem(BaseModel): key1 : str = Field(description=\\"key1 的描述\\") key2 : str = Field(description=\\"key2 的描述\\") key3 : str = Field(description=\\"key3 的描述\\") parser = PydanticOutputParser(pydantic_object=ResultItem) print(parser.get_format_instructions()) first_prompt = PromptTemplate( input_variables=[\\"input\\"], partial_variables={ \\"format_instructions\\": parser.get_format_instructions(), }, template=\\"\\"\\" 假设你是一个 XX 专家，请根据输入的内容分析出结构化的信息。请一步一步分析 step1: 分析 XXX，写入 key1 字段 step2: 分析 XXX，写入 key2 字段 step3: 分析 XXX，写入 key3 字段 {format_instructions} {input} \\"\\"\\" ) chain1 = first_prompt | llm | StrOutputParser() llm_answer = chain1.invoke(input_data) json_answer = json.loads(llm_answer)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/wiki/notes/LangChain%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%20JSON%20%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:site_name","content":"罗潇阳的博客"}],["meta",{"property":"og:description","content":"from langchain_openai import ChatOpenAI from langchain.prompts import PromptTemplate from langchain_core.prompts import ChatPromptTemplate from langchain_core.output_parsers import StrOutputParser from langchain.output_parsers import PydanticOutputParser from langchain_core.pydantic_v1 import BaseModel, Field import json llm = ChatOpenAI( base_url=\\"http://hunyuanapi.woa.com/openapi/v1\\", api_key=\\"HWiNj7muC8RNMu3xR0050RoE31uu2vkI\\", model=\\"hunyuan\\") class ResultItem(BaseModel): key1 : str = Field(description=\\"key1 的描述\\") key2 : str = Field(description=\\"key2 的描述\\") key3 : str = Field(description=\\"key3 的描述\\") parser = PydanticOutputParser(pydantic_object=ResultItem) print(parser.get_format_instructions()) first_prompt = PromptTemplate( input_variables=[\\"input\\"], partial_variables={ \\"format_instructions\\": parser.get_format_instructions(), }, template=\\"\\"\\" 假设你是一个 XX 专家，请根据输入的内容分析出结构化的信息。请一步一步分析 step1: 分析 XXX，写入 key1 字段 step2: 分析 XXX，写入 key2 字段 step3: 分析 XXX，写入 key3 字段 {format_instructions} {input} \\"\\"\\" ) chain1 = first_prompt | llm | StrOutputParser() llm_answer = chain1.invoke(input_data) json_answer = json.loads(llm_answer)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-23T11:19:44.000Z"}],["meta",{"property":"article:author","content":"CCViolett"}],["meta",{"property":"article:modified_time","content":"2024-07-23T11:19:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-23T11:19:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CCViolett\\",\\"url\\":\\"https://ccviolett.github.io\\"}]}"]]},"headers":[{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1721733584000,"updatedTime":1721733584000,"contributors":[{"name":"copoluo","email":"copoluo@tencent.com","commits":1}]},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"wiki/notes/LangChain 格式化输出 JSON 数据.md","localizedDate":"2024年7月23日","excerpt":"<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> langchain_openai <span class=\\"token keyword\\">import</span> ChatOpenAI\\n<span class=\\"token keyword\\">from</span> langchain<span class=\\"token punctuation\\">.</span>prompts <span class=\\"token keyword\\">import</span> PromptTemplate\\n<span class=\\"token keyword\\">from</span> langchain_core<span class=\\"token punctuation\\">.</span>prompts <span class=\\"token keyword\\">import</span> ChatPromptTemplate\\n<span class=\\"token keyword\\">from</span> langchain_core<span class=\\"token punctuation\\">.</span>output_parsers <span class=\\"token keyword\\">import</span> StrOutputParser\\n<span class=\\"token keyword\\">from</span> langchain<span class=\\"token punctuation\\">.</span>output_parsers <span class=\\"token keyword\\">import</span> PydanticOutputParser\\n<span class=\\"token keyword\\">from</span> langchain_core<span class=\\"token punctuation\\">.</span>pydantic_v1 <span class=\\"token keyword\\">import</span> BaseModel<span class=\\"token punctuation\\">,</span> Field\\n<span class=\\"token keyword\\">import</span> json\\n\\nllm <span class=\\"token operator\\">=</span> ChatOpenAI<span class=\\"token punctuation\\">(</span>\\n    base_url<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"http://hunyuanapi.woa.com/openapi/v1\\"</span><span class=\\"token punctuation\\">,</span>\\n    api_key<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"HWiNj7muC8RNMu3xR0050RoE31uu2vkI\\"</span><span class=\\"token punctuation\\">,</span>\\n    model<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"hunyuan\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ResultItem</span><span class=\\"token punctuation\\">(</span>BaseModel<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    key1 <span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span> <span class=\\"token operator\\">=</span> Field<span class=\\"token punctuation\\">(</span>description<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"key1 的描述\\"</span><span class=\\"token punctuation\\">)</span>\\n    key2 <span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span> <span class=\\"token operator\\">=</span> Field<span class=\\"token punctuation\\">(</span>description<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"key2 的描述\\"</span><span class=\\"token punctuation\\">)</span>\\n    key3 <span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span> <span class=\\"token operator\\">=</span> Field<span class=\\"token punctuation\\">(</span>description<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"key3 的描述\\"</span><span class=\\"token punctuation\\">)</span>\\n\\nparser <span class=\\"token operator\\">=</span> PydanticOutputParser<span class=\\"token punctuation\\">(</span>pydantic_object<span class=\\"token operator\\">=</span>ResultItem<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>parser<span class=\\"token punctuation\\">.</span>get_format_instructions<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\nfirst_prompt <span class=\\"token operator\\">=</span> PromptTemplate<span class=\\"token punctuation\\">(</span>\\n    input_variables<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"input\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    partial_variables<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token string\\">\\"format_instructions\\"</span><span class=\\"token punctuation\\">:</span> parser<span class=\\"token punctuation\\">.</span>get_format_instructions<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> \\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    template<span class=\\"token operator\\">=</span><span class=\\"token triple-quoted-string string\\">\\"\\"\\"\\n    假设你是一个 XX 专家，请根据输入的内容分析出结构化的信息。请一步一步分析\\n    step1: 分析 XXX，写入 key1 字段\\n    step2: 分析 XXX，写入 key2 字段\\n    step3: 分析 XXX，写入 key3 字段\\n\\n    {format_instructions}\\n\\n    {input}\\n    \\"\\"\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\nchain1 <span class=\\"token operator\\">=</span> first_prompt <span class=\\"token operator\\">|</span> llm <span class=\\"token operator\\">|</span> StrOutputParser<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nllm_answer <span class=\\"token operator\\">=</span> chain1<span class=\\"token punctuation\\">.</span>invoke<span class=\\"token punctuation\\">(</span>input_data<span class=\\"token punctuation\\">)</span>\\njson_answer <span class=\\"token operator\\">=</span> json<span class=\\"token punctuation\\">.</span>loads<span class=\\"token punctuation\\">(</span>llm_answer<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
