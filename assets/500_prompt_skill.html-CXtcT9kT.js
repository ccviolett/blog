const t=JSON.parse('{"key":"v-027446b3","path":"/wiki/500_prompt_skill.html","title":"非 Prompt 大模型优化技巧","lang":"zh-CN","frontmatter":{"order":500,"icon":"rocket","description":"非 Prompt 大模型优化技巧 轮询 大模型给出的结果存在浮动，并且对于通用的大模型基座，单个 Prompt 执行正确率也存在一定的上限，故在达到 90% 的阈值之后，在 Prompt 层面的继续优化对最终正确率的提升可能并不显著。 并且，即使是一个非常优异的 Prompt，也会因为大模型基座的迭代而发生正确率的震荡，这是非常不稳定且不值得的，于是我们可以从 Prompt 之外的地方寻求正确率和稳定性的提升。 一个效果比较显著的方式是通过“轮询”的方式，用通俗的话来说，就是轮流尝试多个 Prompt 方案。 比如当前存在 A、B、C 三种 Prompt 方案，我们可以先尝试 A 方案，如果失败了再依次尝试 B、C 方案。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/wiki/500_prompt_skill.html"}],["meta",{"property":"og:site_name","content":"罗潇阳的博客"}],["meta",{"property":"og:title","content":"非 Prompt 大模型优化技巧"}],["meta",{"property":"og:description","content":"非 Prompt 大模型优化技巧 轮询 大模型给出的结果存在浮动，并且对于通用的大模型基座，单个 Prompt 执行正确率也存在一定的上限，故在达到 90% 的阈值之后，在 Prompt 层面的继续优化对最终正确率的提升可能并不显著。 并且，即使是一个非常优异的 Prompt，也会因为大模型基座的迭代而发生正确率的震荡，这是非常不稳定且不值得的，于是我们可以从 Prompt 之外的地方寻求正确率和稳定性的提升。 一个效果比较显著的方式是通过“轮询”的方式，用通俗的话来说，就是轮流尝试多个 Prompt 方案。 比如当前存在 A、B、C 三种 Prompt 方案，我们可以先尝试 A 方案，如果失败了再依次尝试 B、C 方案。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T09:19:19.000Z"}],["meta",{"property":"article:author","content":"CCViolett"}],["meta",{"property":"article:modified_time","content":"2024-08-02T09:19:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"非 Prompt 大模型优化技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-02T09:19:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CCViolett\\",\\"url\\":\\"https://ccviolett.github.io\\"}]}"]]},"headers":[{"level":2,"title":"轮询","slug":"轮询","link":"#轮询","children":[]},{"level":2,"title":"大小问","slug":"大小问","link":"#大小问","children":[]}],"git":{"createdTime":1722590359000,"updatedTime":1722590359000,"contributors":[{"name":"copoluo","email":"copoluo@tencent.com","commits":1}]},"readingTime":{"minutes":2.56,"words":767},"filePathRelative":"wiki/500_prompt_skill.md","localizedDate":"2024年8月2日","excerpt":"<h1> 非 Prompt 大模型优化技巧</h1>\\n<h2> 轮询</h2>\\n<p>大模型给出的结果存在浮动，并且对于通用的大模型基座，单个 Prompt 执行正确率也存在一定的上限，故在达到 90% 的阈值之后，在 Prompt 层面的继续优化对最终正确率的提升可能并不显著。</p>\\n<p>并且，即使是一个非常优异的 Prompt，也会因为大模型基座的迭代而发生正确率的震荡，这是非常不稳定且不值得的，于是我们可以从 Prompt 之外的地方寻求正确率和稳定性的提升。</p>\\n<p>一个效果比较显著的方式是通过“轮询”的方式，用通俗的话来说，就是轮流尝试多个 Prompt 方案。</p>\\n<p>比如当前存在 A、B、C 三种 Prompt 方案，我们可以先尝试 A 方案，如果失败了再依次尝试 B、C 方案。</p>","autoDesc":true}');export{t as data};
